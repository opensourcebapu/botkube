apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "botkube.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "botkube.name" . }}
    helm.sh/chart: {{ include "botkube.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: controller
    app: botkube
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: controller
      app: botkube
  template:
    metadata:
      labels:
        component: controller
        app: botkube
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "botkube.fullname" . }}-sa
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: config-volume
              mountPath: "/config"
          {{- if ne .Values.config.communications.mattermost.cert "None" }}
            - name: certs
              mountPath: "/etc/ssl/certs"
          {{ end }}
          env:
            - name: CONFIG_PATH
              value: "/config/"
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            - name: BOTKUBE_VERSION
              value: {{ .Chart.Version }}
        {{- if .Values.extraEnv }}
          {{- range $name, $value := .Values.extraEnv }}
            - name: {{ $name }}
              value: {{ quote $value }}
          {{- end }}
        {{- end }}            
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "botkube.fullname" . }}-configmap
      {{- if ne .Values.config.communications.mattermost.cert "None" }} 
        - name: certs
          secret:
            secretName: {{ include "botkube.fullname" . }}-secret
      {{ end }}
