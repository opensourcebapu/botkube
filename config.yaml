## Resources you want to watch
resources:
  - name: pod                # Name of the resources e.g pod, deployment, ingress, etc.
    namespaces:               # List of namespaces, "all" will watch all the namespaces
      include:  
        - all
      ignore:                 # List of namespaces to be ignored (omitempty), used only with include: all
        -                     # example : include [all], ignore [x,y,z] 
    events:                   # List of lifecycle events you want to receive, e.g create, update, delete, error OR all
      - create
      - delete
      - error
  - name: service
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: deployment
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - update
      - delete
      - update
      - error
  - name: statefulset
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - update
      - delete
      - error
  - name: ingress
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: node
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: namespace
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: persistentvolume
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: persistentvolumeclaim
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: secret
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: configmap
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: daemonset
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: job
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - update
      - delete
      - error
  - name: role
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: rolebinding
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: clusterrolebindings
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error
  - name: clusterrolebinding
    namespaces:
      include:  
        - all
      ignore:
        - 
    events:
      - create
      - delete
      - error

# Check true if you want to receive recommendations
# about the best practices for the created resource
recommendations: true

# Channels configuration
communications:
  # Settings for Slack
  slack:
    enabled: false
    channel: 'SLACK_CHANNEL'
    token: 'SLACK_API_TOKEN'
    notiftype: short                           # Change notification type short/long you want to receive. notiftype is optional and Default notification type is short (if not specified)
  
  # Settings for Mattermost
  mattermost:
    enabled: false
    url: 'MATTERMOST_SERVER_URL'                # URL where Mattermost is running. e.g https://example.com:9243
    token: 'MATTERMOST_TOKEN'			# Personal Access token generated by BotKube user
    team: 'MATTERMOST_TEAM'			# Mattermost Team to configure with BotKube 
    channel: 'MATTERMOST_CHANNEL'		# Mattermost Channel for receiving BotKube alerts 
    notiftype: short                           # Change notification type short/long you want to receive. notiftype is optional and Default notification type is short (if not specified)
  
  # Settings for ELS
  elasticsearch:
    enabled: false
    server: 'ELASTICSEARCH_ADDRESS'              # e.g https://example.com:9243
    username: 'ELASTICSEARCH_USERNAME'
    password: 'ELASTICSEARCH_PASSWORD'
    # ELS index settings
    index:
      name: botkube
      type: botkube-event
      shards: 1
      replicas: 0

# Setting to support multiple clusters
settings:
  # Cluster name to differentiate incoming messages
  clustername: not-configured
  # Set true to enable kubectl commands execution
  allowkubectl: false
  # Set true to enable config watcher
  configwatcher: true
  # Set false to disable upgrade notification
  upgradeNotifier: true
